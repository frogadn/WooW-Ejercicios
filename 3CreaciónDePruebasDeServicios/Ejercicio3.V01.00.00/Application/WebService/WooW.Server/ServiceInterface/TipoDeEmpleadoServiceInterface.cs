// ------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta. WooW.SB ttModeloServiceInterface
//     Versión del runtime: 1.0.0.0
//  
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
// ------------------------------------------------------------------------------//
using WooW.Core.Server;
using WooW.Core;
using WooW.Core.Common;
using WooW.DTO;
using WooW.Model;
using ServiceStack;
using ServiceStack.OrmLite;

namespace WooW.ServiceInterface
{
    public class TipoDeEmpleadoServiceInterface : Service
    {
        public IAutoQueryDb AutoQuery { get; set; }

#if DEBUG
        public object Get(TipoDeEmpleadoAutoQuery query)
        {
            var wotarget = new WoTargetConnection(Request, Db);
            var queryResult = AutoQuery.CreateQuery(query, Request, wotarget.Db);
            return AutoQuery.Execute(query, queryResult, wotarget.Db);
        }
#endif


        public WoODataResponse<dynamic> Get(TipoDeEmpleadoList ODataRequest)
        {
            return WoGenericService.ODataGet<TipoDeEmpleado>(new WoTargetConnection(Request, Db), Request, ODataRequest, true);
        }

        public TipoDeEmpleado Get(TipoDeEmpleadoGet GetRequest)
        {
            return TipoDeEmpleado.Get(new WoTargetConnection(Request, Db), GetRequest, WoGetFlags.FillLookUpDescription | WoGetFlags.ApplyFilter);
        }

        public TipoDeEmpleado Get(TipoDeEmpleadoSingle SingleRequest)
        {
            return TipoDeEmpleado.Single(new WoTargetConnection(Request, Db), SingleRequest, WoGetFlags.FillLookUpDescription | WoGetFlags.ApplyFilter);
        }



        public TipoDeEmpleado Post(TipoDeEmpleadoNuevo dtoRequest)
        {
            return TipoDeEmpleado.Post(new WoTargetConnection(Request, Db), dtoRequest);
        }

        public TipoDeEmpleado[] Post(TipoDeEmpleadoNuevo[] dtoRequests)
        {
            var list = new List<TipoDeEmpleado>();
            var woTarget = new WoTargetConnection(Request, Db);

            using (var dbTrans = woTarget.Db.OpenTransaction())
            {
                try
                {
                    foreach (var dtoRequest in dtoRequests)
                        list.Add(TipoDeEmpleado.Post(woTarget, dtoRequest));

                    dbTrans.Commit();
                }

                catch (Exception ex)
                {
                    dbTrans.Rollback();
                    throw ex;
                }
            }
            return list.ToArray();
        }

        public TipoDeEmpleado Patch(TipoDeEmpleadoActivar dtoRequest)
        {
            return TipoDeEmpleado.Patch(new WoTargetConnection(Request, Db), dtoRequest);
        }

        public TipoDeEmpleado Put(TipoDeEmpleadoActivar dtoRequest)
        {
            return TipoDeEmpleado.Put(new WoTargetConnection(Request, Db), dtoRequest);
        }

        public TipoDeEmpleado[] Post(TipoDeEmpleadoActivar[] dtoRequests)
        {
            var list = new List<TipoDeEmpleado>();
            var woTarget = new WoTargetConnection(Request, Db);

            using (var dbTrans = woTarget.Db.OpenTransaction())
            {
                try
                {
                    foreach (var dtoRequest in dtoRequests)
                        list.Add(TipoDeEmpleado.Put(woTarget, dtoRequest));

                    dbTrans.Commit();
                }

                catch (Exception ex)
                {
                    dbTrans.Rollback();
                    throw ex;
                }
            }
            return list.ToArray();
        }

        public TipoDeEmpleado Patch(TipoDeEmpleadoSuspender dtoRequest)
        {
            return TipoDeEmpleado.Patch(new WoTargetConnection(Request, Db), dtoRequest);
        }

        public TipoDeEmpleado Put(TipoDeEmpleadoSuspender dtoRequest)
        {
            return TipoDeEmpleado.Put(new WoTargetConnection(Request, Db), dtoRequest);
        }

        public TipoDeEmpleado[] Post(TipoDeEmpleadoSuspender[] dtoRequests)
        {
            var list = new List<TipoDeEmpleado>();
            var woTarget = new WoTargetConnection(Request, Db);

            using (var dbTrans = woTarget.Db.OpenTransaction())
            {
                try
                {
                    foreach (var dtoRequest in dtoRequests)
                        list.Add(TipoDeEmpleado.Put(woTarget, dtoRequest));

                    dbTrans.Commit();
                }

                catch (Exception ex)
                {
                    dbTrans.Rollback();
                    throw ex;
                }
            }
            return list.ToArray();
        }

        public TipoDeEmpleado Put(TipoDeEmpleadoDarDeBaja dtoRequest)
        {
            return TipoDeEmpleado.SoftDelete(new WoTargetConnection(Request, Db), dtoRequest);
        }

        public TipoDeEmpleado[] Post(TipoDeEmpleadoDarDeBaja[] dtoRequests)
        {
            var list = new List<TipoDeEmpleado>();
            var woTarget = new WoTargetConnection(Request, Db);

            using (var dbTrans = woTarget.Db.OpenTransaction())
            {
                try
                {
                    foreach (var dtoRequest in dtoRequests)
                        list.Add(TipoDeEmpleado.SoftDelete(woTarget, dtoRequest));

                    dbTrans.Commit();
                }

                catch (Exception ex)
                {
                    dbTrans.Rollback();
                    throw ex;
                }
            }
            return list.ToArray();
        }

                public TipoDeEmpleado Patch(TipoDeEmpleadoModificar dtoRequest)
        {
            return TipoDeEmpleado.Patch(new WoTargetConnection(Request, Db), dtoRequest);
        }

        public TipoDeEmpleado Put(TipoDeEmpleadoModificar dtoRequest)
        {
            return TipoDeEmpleado.Put(new WoTargetConnection(Request, Db), dtoRequest);
        }

        public TipoDeEmpleado[] Post(TipoDeEmpleadoModificar[] dtoRequests)
        {
            var list = new List<TipoDeEmpleado>();
            var woTarget = new WoTargetConnection(Request, Db);

            using (var dbTrans = woTarget.Db.OpenTransaction())
            {
                try
                {
                    foreach (var dtoRequest in dtoRequests)
                        list.Add(TipoDeEmpleado.Put(woTarget, dtoRequest));

                    dbTrans.Commit();
                }

                catch (Exception ex)
                {
                    dbTrans.Rollback();
                    throw ex;
                }
            }
            return list.ToArray();
        }



        public TipoDeEmpleado Delete(TipoDeEmpleadoBorrar dtoRequest)
        {
            return TipoDeEmpleado.Delete(new WoTargetConnection(Request, Db), dtoRequest);  
        }

        public TipoDeEmpleado[] Post(TipoDeEmpleadoBorrar[] dtoRequests)
        {
            var list = new List<TipoDeEmpleado>();
            var woTarget = new WoTargetConnection(Request, Db);

            using (var dbTrans = woTarget.Db.OpenTransaction())
            {
                try
                {
                    foreach (var dtoRequest in dtoRequests)
                        list.Add(TipoDeEmpleado.Delete(woTarget, dtoRequest));

                    dbTrans.Commit();
                }

                catch (Exception ex)
                {
                    dbTrans.Rollback();
                    throw ex;
                }
            }
            return list.ToArray();
        }
    }
}
